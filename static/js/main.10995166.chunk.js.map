{"version":3,"sources":["App.js","index.js"],"names":["suggestions","getSuggestionValue","suggestion","getSuggestions","_ref","value","selected","inputValue","trim","toLowerCase","inputLength","length","count","filter","console","log","keep","includes","slice","renderSuggestion","_ref2","query","isHighlighted","matches","match","parts","parse","react_default","a","createElement","MenuItem","component","onMouseDown","e","preventDefault","map","part","index","highlight","key","style","fontWeight","text","renderSuggestionsContainer","_ref3","containerProps","children","Paper","Object","assign","square","renderInputComponent","_ref4","onChange","onAdd","onDelete","onFocus","onBlur","onKeyDown","chips","ref","ChipInput_default","color","onUpdateInput","inputRef","fullWidth","clearInputValueOnChange","placeholder","withStyles","theme","container","flexGrow","position","suggestionsContainerOpen","marginTop","spacing","unit","marginBottom","left","right","zIndex","display","suggestionsList","margin","padding","listStyleType","textField","width","_ref5","classes","_useState","useState","_useState2","slicedToArray","setInputValue","_useState3","_useState4","setChips","_useState5","_useState6","selectedChips","setSelectedChips","chip","concat","toConsumableArray","dist_default","onSuggestionsFetchRequested","_ref7","onSuggestionsClearRequested","onSuggestionSelected","_ref8","suggestionValue","inputProps","val","i","_ref6","newValue","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.10995166.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { MenuItem, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Autosuggest from 'react-autosuggest';\nimport ChipInput from 'material-ui-chip-input';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit * 3,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  textField: {\n    width: '100%',\n  },\n});\n\nconst suggestions = ['中田', '中島', '中村'];\n\nconst getSuggestionValue = suggestion => suggestion;\n\nconst getSuggestions = ({ value, selected }) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        console.log(suggestion);\n        const keep =\n          count < 5 &&\n          !selected.includes(suggestion) &&\n          suggestion.toLowerCase().slice(0, inputLength) === inputValue;\n        if (keep) count += 1;\n        return keep;\n      });\n};\n\nconst renderSuggestion = (suggestion, { query, isHighlighted }) => {\n  const matches = match(suggestion, query);\n  const parts = parse(suggestion, matches);\n  return (\n    <MenuItem\n      selected={isHighlighted}\n      component=\"div\"\n      onMouseDown={e => e.preventDefault()}\n    >\n      {parts.map((part, index) =>\n        part.highlight ? (\n          <span key={index} style={{ fontWeight: 300 }}>\n            {part.text}\n          </span>\n        ) : (\n          <strong key={index} style={{ fontWeight: 500 }}>\n            {part.text}\n          </strong>\n        ),\n      )}\n    </MenuItem>\n  );\n};\n\nconst renderSuggestionsContainer = ({ containerProps, children }) => (\n  <Paper {...containerProps} square>\n    {children}\n  </Paper>\n);\n\nconst renderInputComponent = ({\n  onChange,\n  onAdd,\n  onDelete,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  chips,\n  ref,\n}) => (\n  <ChipInput\n    color=\"primary\"\n    onUpdateInput={onChange}\n    onAdd={onAdd}\n    onDelete={onDelete}\n    onFocus={onFocus}\n    onBlur={onBlur}\n    onKeyDown={onKeyDown}\n    value={chips}\n    inputRef={ref}\n    fullWidth\n    clearInputValueOnChange\n    placeholder=\"中田, 中島, 中村\"\n  />\n);\n\nfunction App({ classes }) {\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([]);\n  const [selectedChips, setSelectedChips] = useState([]);\n\n  const onAdd = chip => {\n    setSelectedChips([...selectedChips, chip]);\n  };\n\n  const onDelete = (chip, index) => {\n    setSelectedChips(selectedChips.filter((val, i) => index !== i));\n  };\n\n  const onChange = (e, { newValue }) => {\n    setInputValue(newValue);\n  };\n\n  const onSuggestionsFetchRequested = ({ value }) => {\n    setChips(getSuggestions({ value, selected: selectedChips }));\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setChips([]);\n  };\n\n  const onSuggestionSelected = (e, { suggestionValue }) => {\n    e.preventDefault();\n    onAdd(suggestionValue);\n  };\n\n  return (\n    <Autosuggest\n      theme={{\n        container: classes.container,\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n        suggestionsList: classes.suggestionsList,\n        suggestion: classes.suggestion,\n      }}\n      suggestions={chips}\n      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n      onSuggestionsClearRequested={onSuggestionsClearRequested}\n      onSuggestionSelected={onSuggestionSelected}\n      renderSuggestion={renderSuggestion}\n      renderSuggestionsContainer={renderSuggestionsContainer}\n      renderInputComponent={renderInputComponent}\n      getSuggestionValue={getSuggestionValue}\n      inputProps={{\n        chips: selectedChips,\n        value: inputValue,\n        onAdd,\n        onDelete,\n        onChange,\n        classes,\n      }}\n    />\n  );\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}